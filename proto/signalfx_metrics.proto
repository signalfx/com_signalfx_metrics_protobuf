syntax = "proto2";

package com.signalfx.metrics.model;

import "gogoproto/gogo.proto";

option go_package = "model";

// Enable gogoprotobuf extensions (https://github.com/gogo/protobuf/blob/master/extensions.md).
// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;

enum MetricType {
  // Periodic, instantaneous numerical measurement of some state.
  GAUGE = 0;

  // Counts of occurrences since last report. Generally non-negative integers.
  COUNTER = 1;

  // Used for non-continuous quantities (that is, measurements where there is a fixed
  // set of meaningful values). This is essentially a special case of gauge that reports a string value.
  ENUM = 2;

  // Tracks a value that increases over time, where only the difference is important.
  //
  // Counts of occurrences since since a fixed start time. This means that the current value
  // depends on all previous measurements since the start time.
  CUMULATIVE_COUNTER = 3;
}

message Datum {
  optional string strValue = 1;
  optional double doubleValue = 2;
  optional int64 intValue = 3;
}

message Dimension {
  optional string key = 1 [
    (gogoproto.nullable) = false
  ];
  optional string value = 2 [
    (gogoproto.nullable) = false
  ];
}

message DataPoint {
  optional string source = 1 [
    (gogoproto.nullable) = false
  ];
  optional string metric = 2 [
    (gogoproto.nullable) = false
  ];
  optional int64 timestamp = 3 [
    (gogoproto.nullable) = false
  ];
  optional Datum value = 4 [
    (gogoproto.nullable) = false
  ];
  optional MetricType metricType = 5;
  repeated Dimension dimensions = 6;
}

message DataPointUploadMessage {
  repeated DataPoint datapoints = 1;
}

message PointValue {
  optional int64 timestamp = 3 [
    (gogoproto.nullable) = false
  ];
  optional Datum value = 4 [
    (gogoproto.nullable) = false
  ];
}

/**
* Different categories of events supported
*/
enum EventCategory {
  /**
   * Created by user via UI or API, e.g. a deployment event
   */
  USER_DEFINED = 1000000;
  /**
   * Output by anomaly detectors
   */
  ALERT = 100000;
  /**
   * Audit trail events
   */
  AUDIT = 200000;
  /**
   * Generated by analytics server
   */
  JOB = 300000;
  /**
   * @deprecated
   * Event originated within collectd (deprecated in favor of AGENT)
   */
  COLLECTD = 400000;
  /**
   * Service discovery event
   */
  SERVICE_DISCOVERY = 500000;
  /**
   * Created by exception appenders to denote exceptional events
   */
  EXCEPTION = 700000;
  /**
   * Event originated from an agent
   */
  AGENT = 2000000;
}

message Property {
  optional string key = 1 [
    (gogoproto.nullable) = false
  ];
  optional PropertyValue value = 2;
}

message PropertyValue {
  optional string strValue = 1;
  optional double doubleValue = 2;
  optional int64 intValue = 3;
  optional bool boolValue = 4;
}

message Event {
  required string eventType = 1 [
    (gogoproto.nullable) = false
  ];
  repeated Dimension dimensions = 2;
  repeated Property properties = 3;
  optional EventCategory category = 4;
  optional int64 timestamp = 5 [
    (gogoproto.nullable) = false
  ];
}

message EventUploadMessage {
  repeated Event events = 1;
}